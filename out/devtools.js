// Generated by CoffeeScript 1.6.1
(function() {
  var get_el_dna_interfaces, render_resp, responce_from_bg, set_panel_content;

  set_panel_content = function(p, h) {
    return p.document.body.innerHTML = h;
  };

  render_resp = function(panel, data) {
    return set_panel_content(panel, data.toString());
  };

  responce_from_bg = function(data) {
    return "<h3>Responce:</h3>    <pre>" + ((JSON.stringify(data)).replace(/,/g, ',\n')) + "</pre>";
  };

  chrome.devtools.panels.create("DNA", "../res/dna.png", "../pages/panel.html", function(panel) {
    var c, data, port, run_q, _window;
    console.log('hello from DNA panel');
    console.log(panel);
    _window = void 0;
    c = 0;
    data = [];
    port = chrome.extension.connect({
      name: "devtools"
    });
    port.onMessage.addListener(function(msg) {
      if (_window) {
        msg.src = 'direct';
        c = c + 1;
        msg.c = c;
        return render_resp(_window, responce_from_bg(msg));
      } else {
        return data.push(msg);
      }
    });
    run_q = function(panel_window) {
      var msg, _results;
      panel.onShown.removeListener(run_q);
      _window = panel_window;
      _results = [];
      while ((msg = data.shift())) {
        msg.src = 'fromq';
        _results.push(render_resp(_window, responce_from_bg(msg)));
      }
      return _results;
    };
    panel.onShown.addListener(run_q);
    return panel.onShown.addListener(function(panel_window) {
      var msg;
      msg = {
        tabid: chrome.devtools.inspectedWindow.tabId,
        actionid: 'collect-dna-data'
      };
      return port.postMessage(msg);
    });
  });

  get_el_dna_interfaces = function() {
    var DNA, cell, el, id;
    el = $0;
    id = el.id;
    if ((window.require != null) && (DNA = require('dna-lang'))) {
      cell = DNA.get_cell(el.id);
      if (cell !== void 0) {
        return cell;
      } else {
        return {
          node: el,
          ':': "No cell for this node"
        };
      }
    } else {
      return {
        error: "DNA not available"
      };
    }
  };

  chrome.devtools.panels.elements.createSidebarPane("DNA Cell", function(sidebar) {
    var updateElementProperties;
    updateElementProperties = function() {
      return sidebar.setExpression("(" + (get_el_dna_interfaces.toString()) + ")()");
    };
    updateElementProperties();
    return chrome.devtools.panels.elements.onSelectionChanged.addListener(updateElementProperties);
  });

}).call(this);
